package cuny.edu.com.resumebuilder.pdf;

import android.content.Context;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;

import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import cuny.edu.com.resumebuilder.ResumeInformation;

/**
 * Created by 86984L on 10/3/2015.
 */
public class ResumeGenerator {

    private static String LOG_TAG = "RGEN";

    public void generateResume(ResumeInformation resumeInformation, Context context) {
        try {
            createPdf(resumeInformation, context);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void createPdf(ResumeInformation  information, Context context) throws FileNotFoundException, DocumentException {

        //File pdfFolder = new File(Environment.getExternalStoragePublicDirectory(
        //        Environment.DIRECTORY_DOCUMENTS), "resume");

        String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath() + "/PDF";
        File pdfFolder = new File(path);

        if (!pdfFolder.exists()) {
            pdfFolder.mkdir();
            Log.i(LOG_TAG, "Pdf Directory created");
        }

        //Create time stamp
        Date date = new Date() ;

        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(date);

        File myFile = new File(pdfFolder,  "resume_" + timeStamp + ".pdf");
        String fileName = "resume_" + timeStamp + ".pdf";

        FileOutputStream output = context.openFileOutput(fileName, Context.MODE_PRIVATE);

        //OutputStream output = new FileOutputStream(myFile);

        //Step 1
        Document document = new Document();

        //Step 2
        PdfWriter.getInstance(document, output);

        //Step 3
        document.open();

        document.add(createHeader(information));

        //Step 5: Close the document
        document.close();
        Log.i("doc", document.toString());
        Log.i("name", path);
    }

    public Paragraph createHeader(ResumeInformation information) {
        Paragraph paragraph = new Paragraph();
        Font fontbold = FontFactory.getFont("Times-Roman", 12, Font.BOLD);
        paragraph.setFont(fontbold);
        paragraph.setSpacingAfter(25);
        paragraph.setSpacingBefore(25);
        paragraph.setAlignment(Element.ALIGN_CENTER);
        paragraph.setIndentationLeft(50);
        paragraph.setIndentationRight(50);

        Chunk nameChunk = new Chunk(information.getName());
        paragraph.add(nameChunk);
        Chunk addressChunk    = new Chunk(information.getAddress1());
        //Chunk address2Chunk   = new Chunk(information.getAddress2());
      //  Chunk address3Chunk   = new Chunk(information.getAddress3());
        Chunk cityStateAndZip = new Chunk(information.getCity() + ", " + information.getZipCode());
        paragraph.add(addressChunk);
        //paragraph.add(address2Chunk);
        //paragraph.add(address3Chunk);
        paragraph.add(cityStateAndZip);

        return paragraph;
    }
}
